# ZSHRC
#
# Notice that ~/.zshrc is only involved in the interactive session of zsh (i.e.
# zsh session that was spawned with `zsh -l` or similar, to ensure that custom
# shell functions can also be used in single-instance shell interactions (such
# as calling shell functions within shell function neovim and tmux), the PATH
# variable should be modified in the ~/.zshenv file instea 



####### Uncomment to enable profiling
# zmodload zsh/zprof
######

# Instant prompt for powerlevel10k
if [[ -r "$HOME/.cache/p10k-instant-prompt-${USER}.zsh" ]]; then
  source "$HOME/.cache/p10k-instant-prompt-${USER}.zsh"
fi

typeset -U path cdpath fpath manpath

if [[ $USER == "ensc" ]] ; then
  for profile in ${(z)NIX_PROFILES}; do
    fpath+=($profile/share/zsh/site-functions $profile/share/zsh/$ZSH_VERSION/functions $profile/share/zsh/vendor-completions)
  done
elif [[ -d $HOME/.nix-profile ]]; then
  profile=$HOME/.nix-profile
  fpath+=($profile/share/zsh/site-functions $profile/share/zsh/$ZSH_VERSION/functions $profile/share/zsh/vendor-completions)
fi


# HELPDIR=$(realpath "$(dirname $(realpath $(which zsh)))/../share/zsh/$ZSH_VERSION/help")

# Installing the antidote plugin manager if it doesn't exist
export ANTIDOTE_HOME=$HOME/.local/share/antidote_plugins
if [[ ! -d $HOME/.local/share/antidote ]] ; then
  git clone --depth=1 https://github.com/mattmc3/antidote.git $HOME/.local/share/antidote
fi
source $HOME/.local/share/antidote/antidote.zsh
# We will explicitly not be using the static version of antidote plugins to
# better improve portability
antidote load $HOME/.config/zsh/zsh_plugins.txt

# Enabling the autocomplete script. This is very slow on Nix systems so setting
# this to only run once per day
autoload -Uz compinit
if [[ $(($(date +%s) - $(stat -c "%Y" $HOME/.zcompdump))) -gt 86400 ]]; then
  compinit
else
  compinit -C
fi

# History options should be set in .zshrc and after oh-my-zsh sourcing.
# See https://github.com/nix-community/home-manager/issues/177.
HISTSIZE="10000"
SAVEHIST="10000"

HISTFILE="$HOME/.zsh_history"
mkdir -p "$(dirname "$HISTFILE")"

setopt HIST_FCNTL_LOCK
unsetopt APPEND_HISTORY
setopt HIST_IGNORE_DUPS
unsetopt HIST_IGNORE_ALL_DUPS
unsetopt HIST_SAVE_NO_DUPS
unsetopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
unsetopt HIST_EXPIRE_DUPS_FIRST
setopt SHARE_HISTORY
unsetopt EXTENDED_HISTORY

# FZF integration
eval "$(fzf --zsh)"

# Setting the theme of the prompt
source "$HOME/.config/zsh/p10k.zsh"
# Additional command-line tools that uses common gnu-coreutils tools
source "$HOME/.config/zsh/common_utils.sh"

# Resourcing the zshenv environment (fixing path loading in gentoo prefix)
source "$HOME/.zshenv"

# Additional theme based on host name
if [[ "$HOST" == "ensc"* ]]; then                # Personal machine
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=7   # White
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232 # BLACK
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=235 # DARK GRAY
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=3   # Orange
  source $HOME/.config/zsh/local.sh
else
  source $HOME/.config/zsh/remote.sh
  # Loading CMSSW configurations if possible (some configurations requires
  # knowing the cluster configuration)
  if [[ -d "/cvmfs/cms.cern.ch" ]]; then
    source $HOME/.config/zsh/cmssw_tools.sh
  fi
fi

if [[ "$HOST" == "ensc"* ]]; then                # Personal machine
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=7   # White
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232 # BLACK
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=235 # DARK GRAY
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=3   # Orange
elif [[ "$MACHINE_TYPE_DETAIL" == "umdcms" ]]; then
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=7   # White
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232 # BLACK
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=235 # DARK GRAY
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=3   # Orange
elif [[ "$MACHINE_TYPE_DETAIL" == "cmslpc" ]]; then
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=3 # ORANGE
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=3 # ORANGE
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=232
  # Domain name is defined by zshenv
elif [[ "$MACHINE_TYPE_DETAIL" == "lxplus" ]]; then
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=19 # DEEP BLUE
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=7
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=19 # DEEP BLUE
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=7
  # Additional setup required for portage compilation
  mkdir -p /tmp/${USER}/portage-var-lib
  mkdir -p /tmp/${USER}/portage-var-tmp
elif [[ "$MACHINE_TYPE_DETAIL" == "kit" ]]; then # KIT RELATED MACHINES
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=22  # DEEP GREEN
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=7
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=22 # DEEP GREEN
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=7
else
  ## HOSTNAME NOT LISTED!!
  typeset -g POWERLEVEL9K_OS_ICON_BACKGROUND=1          # RED
  typeset -g POWERLEVEL9K_OS_ICON_FOREGROUND=232        # BLACK
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=1   # RED
  typeset -g POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=232 # BLACK
fi

# Required for fixing keystrokes??
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[3~"  delete-char

############## Uncomment to run profiling
# zprof
########
